c
vc
c
self.class.columns
columns
self.columns
self
c
self.id
self.send(:id)
self.class.columns
c
self.class.table_name.id
self.class.table_name
attribute_values
self.id
self
cols
c
self.class.columns
columns
attribute_values.drop(1)
attribute_values
c
n
questions_joined
col_names_joined
questions
table_name
self
col_names
c
self.new(name: "breakfast")
self.new(id: 1)
results
self
c
self
self.columns
columns
attributes
attributes[:name]
name
c
options
name
c
DBConnection.execute(new_query, DBConnection.last_insert_row_id)
DBConnection.execute(new_query)
c
    id = DBConnection.execute(new_query , *attribute_values)
                  VALUES (#{questions_joined})"
    new_query = "INSERT INTO #{self.class.table_name} (#{col_names_joined})
self
DBConnection.execute(new_query , *attribute_values)
id
c
DBConnection.execute("SELECT * FROM #{table_name}")
self.find_by_sql("SELECT * FROM #{table_name}")
self.execute("SELECT * FROM #{table_name}")
self
n
c
s
c
display attribs
c
display params
params
c
paramc
c
params
c
params
attribs
c
cc
c
col
c
s
c
self.attributes
attributes
c
@attributes
self.attributes
self
c
self.attributes
self.attribute
self.attributes
self
c
self.columns
self.table_name
self.methods
self
self.name
self.instance_variables
self.attributes
self
SQLObject.columns
@result
c
DBConnection.execute2(query).first
DBConnection.execute2(query)
query
c
DBConnection.execute2(query, :table_name)
DBConnection.execute2(query, self)
DBConnection.execute2(query, self.table_name)
DBConnection.execute2(query)
c
DBConnection.execute2([query])
c
DBConnection.execute2([query])
DBConnection.execute2([query, self])
DBConnection.execute2([query, self.table_name])
query
c
s
display name
c
display name
name
s
names
c
s
name
s
c
n
names
c
name
:name
n
name
